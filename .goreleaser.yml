# produced artifacts are stored in this folder
dist: dist
# customize execution
before:
  hooks:
    - go mod download
    - go generate ./...
# artifacts to produce
# https://goreleaser.com/customization/build/
builds:
  # a single project can support/require several build targets
  - id: affinityctl
    # main binary name
    binary: affinityctl
    # code entrypoint
    main: ./cli/main.go
    # CLI flags for the 'go build' command
    flags:
      -v
    ldflags:
      - -s -w
      - -X github.com/aidtechnology/affinityctl/cli/cmd.coreVersion={{.Version}}
      - -X github.com/aidtechnology/affinityctl/cli/cmd.buildCode={{.Commit}}
      - -X github.com/aidtechnology/affinityctl/cli/cmd.buildTimestamp={{.CommitDate}}
    # set the modified timestamp on the output binary to ensure a
    # reproducible build
    mod_timestamp: '{{ .CommitTimestamp }}'
    # disable CGO since it's not supported
    env:
      - CGO_ENABLED=0
    # supported OSs
    goos:
      - linux
      - windows
      - darwin
    # supported architectures
    goarch:
      - amd64
# packages to produce
# https://goreleaser.com/customization/archive/
archives:
  # a single project can produce multiple archives
  -
    name_template: "affinityctl_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
# generate integrity checksums
# https://goreleaser.com/customization/checksum/
checksum:
  name_template: 'affinityctl_{{ .Version }}_checksums.txt'
  algorithm: sha256
# Include source code package on the release
# https://goreleaser.com/customization/source/
source:
  enabled: false
# produce test releases
# https://goreleaser.com/customization/snapshots/
snapshot:
  name_template: '{{ .Tag }}-next'
# configure the 'CHANGELOG.md' file produced
# https://goreleaser.com/customization/release/#customize-the-changelog
changelog:
  sort: asc
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - typo
# Produce homebrew formulas for the project artifacts
# https://goreleaser.com/customization/homebrew/
brews:
  -
    # Formula name
    name: affinityctl
    # Push the formula to the tap repository
    skip_upload: true
    # TAP repository
    tap:
      owner: bryk-io
      name: homebrew-tap
    # Use 'github-actions' as commit author
    # https://github.community/t/github-actions-bot-email-address/17204
    commit_author:
      name: github-actions
      email: 41898282+github-actions[bot]@users.noreply.github.com
    homepage: 'https://github.com/aidtechnology/affinityctl'
    description: |
      Add a brief but descriptive paragraph about the application.
    install: |
      bin.install "affinityctl"
      output = Utils.popen_read("#{bin}/affinityctl completion bash")
      (bash_completion/"affinityctl").write output
      output = Utils.popen_read("#{bin}/affinityctl completion zsh")
      (zsh_completion/"_affinityctl").write output
      prefix.install_metafiles
    test: |
      system "#{bin}/affinityctl version"
